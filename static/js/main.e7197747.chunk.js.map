{"version":3,"sources":["components/reddit/SubRedditLinkLogo.js","components/reddit/SubRedditTopPost.js","components/hackerNews/HackerNewsLinkLogo.js","components/hackerNews/HackerNewsItem.js","components/Assembler.js","components/ApiCalls.js","components/App.js","index.js"],"names":["SubRedditLinkLogo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","url","src","subreddit","icon_img","alt","Component","SubRedditTopPost","getTopPost","fetch","concat","display_name","then","response","ok","json","Error","result","setState","topPost","data","children","error","bind","assertThisInitialized","reddit_SubRedditLinkLogo","title","display_name_prefixed","subscribers","score","permalink","num_comments","HackerNewsLinkLogo","HackerNewsItem","getHackerNewsItem","isLoading","id","hackerNewsItem","_this$state","message","hackerNews_HackerNewsLinkLogo","descendants","Assembler","assembleList","subreddits","hackerNewsPosts","forEach","chrnPostType","completeListLocal","reduce","arr","v","i","completeList","renderList","map","element","reddit_SubRedditTopPost","key","hackerNews_HackerNewsItem","ApiCalls","getTopSubreddits","getHackerNewsPosts","slice","length","components_Assembler","App","viewBox","preserveAspectRatio","x","y","textAnchor","components_ApiCalls","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e7197747.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\n\r\nclass SubRedditLinkLogo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n    render(){\r\n\r\n      const BASE_REDDIT_URL = \"https://www.reddit.com\"\r\n\r\n        return(\r\n\r\n            <div className=\"liImgDiv\">\r\n            <a href={this.props.url}>\r\n                <img src={this.props.subreddit.icon_img ? this.props.subreddit.icon_img : \"https://www.redditstatic.com/icon.png\"} alt=\"\"/>\r\n            </a>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubRedditLinkLogo;\r\n","import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\nimport SubRedditLinkLogo from 'components/reddit/SubRedditLinkLogo'\r\n\r\nclass SubRedditTopPost extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topPost: [],\r\n      error: null,\r\n    };\r\n\r\n    this.getTopPost = this.getTopPost.bind(this);\r\n  }\r\n\r\n  getTopPost = () =>{\r\n        \r\n      fetch(`https://www.reddit.com/r/${this.props.subreddit.display_name}/hot/.json?print=pretty&limit=1`)\r\n      .then(response =>  {    \r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            throw new Error('Something went wrong ...');\r\n        }\r\n      })\r\n      .then(result => {\r\n          this.setState({\r\n              topPost: result.data.children[0].data\r\n           });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            error,\r\n          });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getTopPost();\r\n    }\r\n\r\n    render(){\r\n\r\n      const{topPost} = this.state;\r\n      const BASE_REDDIT_URL = \"https://www.reddit.com\"\r\n\r\n        return(\r\n          <div className=\"liDiv fade-in\">\r\n            <SubRedditLinkLogo url={topPost.url} subreddit={this.props.subreddit}/>\r\n            <div className=\"li\">\r\n              <a href={topPost.url}>{topPost.title}</a>\r\n              <br /><br />\r\n              <a href={BASE_REDDIT_URL+this.props.subreddit.url}>{this.props.subreddit.display_name_prefixed}</a>\r\n              <br />\r\n              {this.props.subreddit.subscribers} subs\r\n              <br /><br />\r\n              {topPost.score} upvotes | <a href={BASE_REDDIT_URL+topPost.permalink}>{topPost.num_comments} comments</a>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubRedditTopPost;\r\n","import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\n\r\nclass HackerNewsLinkLogo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"liImgDiv\">\r\n            <a href={this.props.url}>\r\n            <img src=\"https://pbs.twimg.com/profile_images/378800000011494576/9c90acb704cbf9eef6135009c9bb5657_400x400.png\" alt=\"\"/>\r\n          </a>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HackerNewsLinkLogo;\r\n","import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\nimport HackerNewsLinkLogo from 'components/hackerNews/HackerNewsLinkLogo'\r\n\r\nclass HackerNewsItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hackerNewsItem: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n\r\n    this.getHackerNewsItem = this.getHackerNewsItem.bind(this);\r\n  }\r\n\r\n  getHackerNewsItem = (props) =>{\r\n\r\n    const JSON_QUERY = '.json?print=pretty';\r\n    const BASE_URL = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(`${BASE_URL}/item/${this.props.id}${JSON_QUERY}`)\r\n    .then(response =>  {    \r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong ...');\r\n      }\r\n    })\r\n    .then(result => {\r\n\r\n        this.setState({\r\n            hackerNewsItem: result,\r\n            isLoading: false\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          error,\r\n          isLoading: false\r\n        });\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHackerNewsItem();\r\n  }\r\n\r\n  render() {\r\n    const{hackerNewsItem, isLoading, error} = this.state;\r\n    const HN_ITEM_URL = \"https://news.ycombinator.com/item?id=\";\r\n\r\n    if (error) {\r\n      return <p>{error.message}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n      return <p>Loading ...</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"liDiv fade-in\"> \r\n        <HackerNewsLinkLogo url={hackerNewsItem.url}/>\r\n        <div className=\"li\">\r\n              <div className=\"hackerNewsItem\">\r\n              <a href={hackerNewsItem.url}>{hackerNewsItem.title}</a><br />\r\n              <br /><br />\r\n              {hackerNewsItem.score} points | <a href={HN_ITEM_URL+hackerNewsItem.id}>{hackerNewsItem.descendants} comments</a>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HackerNewsItem;\r\n","import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\nimport SubRedditTopPost from 'components/reddit/SubRedditTopPost'\r\nimport HackerNewsItem from 'components/hackerNews/HackerNewsItem'\r\n\r\nclass Assembler extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      completeList: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n\r\n    this.assembleList = this.assembleList.bind(this);\r\n  }\r\n\r\n  assembleList = (props) =>{\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        }) \r\n\r\n        let subreddits = this.props.subreddits;\r\n        let hackerNewsPosts = this.props.hackerNewsPosts;\r\n\r\n        subreddits.forEach((subreddit) =>{\r\n            subreddit.chrnPostType = \"reddit\";\r\n        })\r\n        \r\n        let completeListLocal = subreddits.reduce(function(arr, v, i) {\r\n            return arr.concat(v, hackerNewsPosts[i]); \r\n         }, []);\r\n\r\n\r\n        this.setState({\r\n            completeList: completeListLocal,\r\n            isLoading: false\r\n        }) \r\n  }\r\n\r\n  renderList = () =>{\r\n\r\n    const completeList = this.state.completeList;\r\n\r\n      return (      \r\n      \r\n      <div className=\"assembler\">\r\n            \r\n        {completeList.map( element =>{\r\n\r\n            if(element.chrnPostType === \"reddit\"){\r\n              return( \r\n                <SubRedditTopPost subreddit={element.data} key={element.data.id}/>\r\n              )\r\n            }else{\r\n              return (\r\n                <HackerNewsItem id={element} key={element}/>\r\n              )\r\n            }})}\r\n             </div>\r\n      )\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.assembleList()\r\n  }\r\n\r\n  render() {\r\n    const {isLoading, error} = this.state;\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n      }\r\n  \r\n      if (isLoading) {\r\n        return <p>Loading ...</p>;\r\n      }\r\n\r\n    return this.renderList();\r\n  }\r\n}\r\n\r\nexport default Assembler;\r\n","import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\nimport Assembler from 'components/Assembler'\r\n\r\nclass ApiCalls extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      subreddits: [],\r\n      hackerNewsPosts: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n\r\n    this.getTopSubreddits = this.getTopSubreddits.bind(this);\r\n    this.getHackerNewsPosts = this.getHackerNewsPosts.bind(this);\r\n  }\r\n\r\n  getTopSubreddits = () =>{\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(\"https://www.reddit.com/subreddits/popular/.json\")\r\n    .then(response =>  {    \r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong ...');\r\n      }\r\n    })\r\n    .then(result => {\r\n\r\n        this.setState({\r\n          subreddits: result.data.children,\r\n          isLoading: false\r\n        });\r\n\r\n\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          error,\r\n          isLoading: false\r\n        });\r\n      })\r\n  }\r\n\r\n  getHackerNewsPosts = () =>{\r\n\r\n    const JSON_QUERY = '.json?print=pretty';\r\n    const BASE_URL = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(`${BASE_URL}/topstories${JSON_QUERY}`)\r\n    .then(response =>  {    \r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Something went wrong ...');\r\n      }\r\n    })\r\n    .then(result => {\r\n\r\n        const slice = result.slice(0, 25);\r\n\r\n        this.setState({\r\n            hackerNewsPosts: slice,\r\n            isLoading: false\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          error,\r\n          isLoading: false\r\n        });\r\n      })\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.getTopSubreddits();\r\n    this.getHackerNewsPosts();\r\n  }\r\n\r\n  render() {\r\n    const {subreddits, hackerNewsPosts, isLoading, error} = this.state;\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n      }\r\n  \r\n      if (isLoading) {\r\n        return <p>Loading ...</p>;\r\n      }\r\n\r\n      if(subreddits.length > 0 && hackerNewsPosts.length > 0){\r\n          return (\r\n            <Assembler subreddits={subreddits} hackerNewsPosts={hackerNewsPosts} />\r\n        );\r\n      }\r\n      else{\r\n        return <p>Loading ...</p>;\r\n      }\r\n  }\r\n}\r\n\r\nexport default ApiCalls;\r\n","import React, { Component } from 'react';\r\nimport 'styles/App.scss';\r\nimport ApiCalls from 'components/ApiCalls'\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <div className=\"logoBox\">\r\n            <svg className=\"logoSvg\" viewBox=\"0 0 100 30\" preserveAspectRatio=\"xMaxYMax meet\">\r\n              <text x=\"50\" y=\"20\" textAnchor=\"middle\" className=\"logo neon-flicker\">chrn</text>\r\n            </svg>\r\n          </div>\r\n        </header>\r\n            <div className=\"List\">\r\n              <ApiCalls />\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}